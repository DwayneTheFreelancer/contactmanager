{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","_componentDidMount","inherits","createClass","key","value","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","Link","to","marginRight","Contacts","Fragment","Contact_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","href","branding","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0db48479.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport axios from 'axios'\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => \n                    contact.id !== action.payload)\n                \n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state, \n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact) \n            };\n        default: \n            return state;\n    }\n}\n\nexport class Provider extends Component {\n    state = {\n        contacts: [],\n        dispatch: action => this.setState(state => reducer(state, action))\n    }\n\n    async componentDidMount() {\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\n        this.setState({contacts: res.data});\n    }\n\n    render() {\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        )\n    }\n\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Consumer } from '../../context.js'\nimport axios from 'axios'\n//import '../App.css';\n\nexport default class Contact extends Component {\n\n    state = {\n        showContactInfo: false\n    }\n\n    onDeleteClick = async (id, dispatch) => { \n        try {\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        } catch(e) {\n            dispatch({type: 'DELETE_CONTACT', payload: id});\n        }\n\n    }\n\n    render() {\n\n        const { id, name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n\n        return (   \n\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                            <h4>\n                            {name}{' '}\n                            <i onClick={() => this.setState({\n                                showContactInfo: !this.state.showContactInfo\n                            })} className=\"fas fa-sort-down\" style={{ cursor: 'pointer' }}></i> \n                            <i onClick={this.onDeleteClick.bind(this, id, dispatch)} className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }}></i>\n                            <Link to={`/contact/edit/${id}`}>\n                                <i style={{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem' }} className=\"fas fa-pencil-alt\"></i>\n                            </Link>\n                            </h4> \n                            { showContactInfo ? (<ul className=\"list-group\">\n                                <li className=\"list-group-item\">{email}</li>\n                                <li className=\"list-group-item\">{phone}</li>\n                            </ul>) : null}\n                        </div>\n                    )\n                }}\n            </Consumer>\n\n        )\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired\n}\n\n","import React, { Component } from 'react'\nimport Contact from './Contact.js'\n// Consumer is the Component that uses the state from the Provider\nimport { Consumer } from '../../context.js'\n\nexport default class Contacts extends Component {\n\n    render() {\n\n        return (\n            <Consumer>\n                {value => {\n                    const { contacts } = value;\n                    return (\n                        <React.Fragment>\n                            <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">Contact</span>List</h1>\n                            {contacts.map(contact => (\n                                <Contact key={contact.id} contact={contact} />\n                            ))}\n                        </React.Fragment>\n                    )\n                }}\n            </Consumer>\n        )\n\n    }\n\n}\n\n\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classnames from 'classnames'\n\n\nconst TextInputGroup = ({ label, name, value, placeholder, type, onChange, error }) => {\n  return (\n    <div className=\"form-group\">\n        <label htmlFor={name}>{label}</label>\n        <input type={type} name={name} className={classnames(\"form-control form-control-lg\", {\"is-invalid\": error})} value={value} onChange={onChange} placeholder={placeholder} />\n        {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  )\n};\n\nTextInputGroup.propTypes = {\n    label: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string.required\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;","import React, { Component } from 'react'\nimport { Consumer } from '../../context.js'\nimport TextInputGroup  from '../layout/TextInputGroup'\nimport axios from 'axios'\n\nexport default class AddContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {\n\n        }\n    }\n\n    onChange = (e) => this.setState({ [e.target.name] : e.target.value});\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        const newContact = {\n            name: name, \n            email: email,\n            phone: phone\n        };\n\n        //Check for errors\n        if (name === '') {\n            this.setState({errors: {name: 'Name is required'}});\n            return;\n        }\n\n        if (email === '') {\n            this.setState({errors: {email: 'Email is required'}});\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}});\n            return;\n        }\n\n        const res = await axios.post(\"https://jsonplaceholder.typicode.com/users/\", newContact);\n\n        dispatch({type: 'ADD_CONTACT', payload: res.data});\n\n        // Clear inputs after submission\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push(\"/\");\n\n    }\n\n    render() {\n\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Add Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n\n                                    <TextInputGroup \n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n\n                                    <TextInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-light btn-block\" />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context.js'\nimport TextInputGroup  from '../layout/TextInputGroup.js'\nimport axios from 'axios'\n\nexport default class EditContact extends Component {\n\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {\n\n        }\n    }\n\n    async componentDidMount() {\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n        const contact = res.data;\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onChange = (e) => this.setState({ [e.target.name] : e.target.value});\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n        //Check for errors\n        if (name === '') {\n            this.setState({errors: {name: 'Name is required'}});\n            return;\n        }\n\n        if (email === '') {\n            this.setState({errors: {email: 'Email is required'}});\n            return;\n        }\n\n        if (phone === '') {\n            this.setState({errors: {phone: 'Phone is required'}});\n            return;\n        }\n\n        const updContact = {\n            name: name,\n            email: email,\n            phone: phone\n        }\n\n        // Pull id from url\n        const { id } = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n        dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n        // Clear inputs after submission\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        });\n\n        this.props.history.push(\"/\");\n\n    }\n\n    render() {\n\n        const { name, email, phone, errors } = this.state;\n\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card mb-3\">\n                            <div className=\"card-header\">Edit Contact</div>\n                            <div className=\"card-body\">\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                                    <TextInputGroup \n                                        label=\"Name\"\n                                        name=\"name\"\n                                        placeholder=\"Enter Name\"\n                                        value={name}\n                                        onChange={this.onChange}\n                                        error={errors.name}\n                                    />\n\n                                    <TextInputGroup \n                                        label=\"Email\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        placeholder=\"Enter Email\"\n                                        value={email}\n                                        onChange={this.onChange}\n                                        error={errors.email}\n                                    />\n\n                                    <TextInputGroup \n                                        label=\"Phone\"\n                                        name=\"phone\"\n                                        placeholder=\"Enter Phone\"\n                                        value={phone}\n                                        onChange={this.onChange}\n                                        error={errors.phone}\n                                    />\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-light btn-block\" />\n                                </form>\n                            </div>\n                        </div>\n                    )\n                }}\n            </Consumer>\n        )\n    }\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\n\nconst Header = (props) => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n            <a href=\"/\" className=\"navbar-brand\">{props.branding}</a>\n            <div>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\">\n                            <i className=\"fas fa-home\">Home</i>\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/contact/add\" className=\"nav-link\">\n                            <i className=\"fas fa-plus\">Add</i>\n                        </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\">\n                            <i className=\"fas fa-question\">About</i>\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    </nav>\n  )\n}\n\nHeader.defaultProps = {\n    branding: 'My App'\n}\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">404 Page Not Found</h1>\n      <p className=\"lead\">Sorry that page does not exsist</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Contacts from './components/contacts/Contacts.js'\nimport AddContact from './components/contacts/AddContact.js'\nimport EditContact from './components/contacts/EditContact.js'\nimport Header from './components/layout/Header.js'\nimport About from './components/pages/About.js'\nimport NotFound from '../src/components/pages/NotFound.js'\nimport { Provider } from './context.js'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}